angular.module("app",["ngRoute"]),angular.module("app").controller("LoginCtrl",["$scope","UserSvc",function(t,e){t.login=function(t,o){e.login(t,o).then(function(t){console.log(t)})}}]),angular.module("app").controller("PostsCtrl",["$scope","PostsSvc",function(t,e){t.addPost=function(){t.postBody&&e.create({username:"dickeyxxx",body:t.postBody}).success(function(e){t.posts.unshift(e),t.postBody=null})},e.fetch().success(function(e){t.posts=e})}]),angular.module("app").service("PostsSvc",["$http",function(t){this.fetch=function(){return t.get("/api/posts")},this.create=function(e){return t.post("/api/posts",e)}}]),angular.module("app").config(["$routeProvider",function(t){t.when("/",{controller:"PostsCtrl",templateUrl:"posts.html"}).when("/register",{controller:"RegisterCtrl",templateUrl:"register.html"}).when("/login",{controller:"LoginCtrl",templateUrl:"login.html"})}]),angular.module("app").service("UserSvc",["$http",function(t){var e=this;e.getUser=function(){return t.get("/api/users",{headers:{"X-Auth":this.token}})},e.login=function(o,n){return t.post("/api/sessions",{username:o,password:n}).then(function(t){return e.token=t.data,e.getUser()})}}]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZS5qcyIsImxvZ2luLmN0cmwuanMiLCJwb3N0cy5jdHJsLmpzIiwicG9zdHMuc3ZjLmpzIiwicm91dGVzLmpzIiwidXNlci5zdmMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsUUFBQSxPQUFBLE9BQ0EsWUNEQSxRQUFBLE9BQUEsT0FDQSxXQUFBLGFBQUEsU0FBQSxVQUFBLFNBQUEsRUFBQSxHQUNBLEVBQUEsTUFBQSxTQUFBLEVBQUEsR0FDQSxFQUFBLE1BQUEsRUFBQSxHQUNBLEtBQUEsU0FBQSxHQUNBLFFBQUEsSUFBQSxTQ0xBLFFBQUEsT0FBQSxPQUNBLFdBQUEsYUFBQSxTQUFBLFdBQUEsU0FBQSxFQUFBLEdBQ0EsRUFBQSxRQUFBLFdBQ0EsRUFBQSxVQUNBLEVBQUEsUUFDQSxTQUFBLFlBQ0EsS0FBQSxFQUFBLFdBQ0EsUUFBQSxTQUFBLEdBQ0EsRUFBQSxNQUFBLFFBQUEsR0FDQSxFQUFBLFNBQUEsUUFLQSxFQUFBLFFBQUEsUUFBQSxTQUFBLEdBQ0EsRUFBQSxNQUFBLE9DZkEsUUFBQSxPQUFBLE9BQ0EsUUFBQSxZQUFBLFFBQUEsU0FBQSxHQUNBLEtBQUEsTUFBQSxXQUNBLE1BQUEsR0FBQSxJQUFBLGVBRUEsS0FBQSxPQUFBLFNBQUEsR0FDQSxNQUFBLEdBQUEsS0FBQSxhQUFBLE9DTkEsUUFBQSxPQUFBLE9BQ0EsUUFBQSxpQkFBQSxTQUFBLEdBQ0EsRUFDQSxLQUFBLEtBQ0EsV0FBQSxZQUNBLFlBQUEsZUFFQSxLQUFBLGFBQ0EsV0FBQSxlQUNBLFlBQUEsa0JBRUEsS0FBQSxVQUNBLFdBQUEsWUFDQSxZQUFBLGtCQ2JBLFFBQUEsT0FBQSxPQUNBLFFBQUEsV0FBQSxRQUFBLFNBQUEsR0FDQSxHQUFBLEdBQUEsSUFDQSxHQUFBLFFBQUEsV0FDQSxNQUFBLEdBQUEsSUFBQSxjQUNBLFNBQUEsU0FBQSxLQUFBLFVBR0EsRUFBQSxNQUFBLFNBQUEsRUFBQSxHQUNBLE1BQUEsR0FBQSxLQUFBLGlCQUNBLFNBQUEsRUFBQSxTQUFBLElBQ0EsS0FBQSxTQUFBLEdBRUEsTUFEQSxHQUFBLE1BQUEsRUFBQSxLQUNBLEVBQUEiLCJmaWxlIjoiYXBwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiYW5ndWxhci5tb2R1bGUoJ2FwcCcsIFtcbiAgJ25nUm91dGUnXG5dKVxuIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4uY29udHJvbGxlcignTG9naW5DdHJsJywgZnVuY3Rpb24gKCRzY29wZSwgVXNlclN2Yykge1xuICAkc2NvcGUubG9naW4gPSBmdW5jdGlvbiAodXNlcm5hbWUsIHBhc3N3b3JkKSB7XG4gICAgVXNlclN2Yy5sb2dpbih1c2VybmFtZSwgcGFzc3dvcmQpXG4gICAgLnRoZW4oZnVuY3Rpb24gKHVzZXIpIHtcbiAgICAgIGNvbnNvbGUubG9nKHVzZXIpXG4gICAgfSlcbiAgfVxufSlcbiIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxuLmNvbnRyb2xsZXIoJ1Bvc3RzQ3RybCcsIGZ1bmN0aW9uICgkc2NvcGUsIFBvc3RzU3ZjKSB7XG4gICRzY29wZS5hZGRQb3N0ID0gZnVuY3Rpb24gKCkge1xuICAgIGlmICgkc2NvcGUucG9zdEJvZHkpIHtcbiAgICAgIFBvc3RzU3ZjLmNyZWF0ZSh7XG4gICAgICAgIHVzZXJuYW1lOiAnZGlja2V5eHh4JyxcbiAgICAgICAgYm9keTogJHNjb3BlLnBvc3RCb2R5XG4gICAgICB9KS5zdWNjZXNzKGZ1bmN0aW9uIChwb3N0KSB7XG4gICAgICAgICRzY29wZS5wb3N0cy51bnNoaWZ0KHBvc3QpXG4gICAgICAgICRzY29wZS5wb3N0Qm9keSA9IG51bGxcbiAgICAgIH0pXG4gICAgfVxuICB9XG5cbiAgUG9zdHNTdmMuZmV0Y2goKS5zdWNjZXNzKGZ1bmN0aW9uIChwb3N0cykge1xuICAgICRzY29wZS5wb3N0cyA9IHBvc3RzXG4gIH0pXG59KVxuIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4uc2VydmljZSgnUG9zdHNTdmMnLCBmdW5jdGlvbiAoJGh0dHApIHtcbiAgdGhpcy5mZXRjaCA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gJGh0dHAuZ2V0KCcvYXBpL3Bvc3RzJylcbiAgfVxuICB0aGlzLmNyZWF0ZSA9IGZ1bmN0aW9uIChwb3N0KSB7XG4gICAgcmV0dXJuICRodHRwLnBvc3QoJy9hcGkvcG9zdHMnLCBwb3N0KVxuICB9XG59KVxuIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4uY29uZmlnKGZ1bmN0aW9uICgkcm91dGVQcm92aWRlcikge1xuICAkcm91dGVQcm92aWRlclxuICAud2hlbignLycsIHtcbiAgICBjb250cm9sbGVyOiAnUG9zdHNDdHJsJyxcbiAgICB0ZW1wbGF0ZVVybDogJ3Bvc3RzLmh0bWwnXG4gIH0pXG4gIC53aGVuKCcvcmVnaXN0ZXInLCB7XG4gICAgY29udHJvbGxlcjogJ1JlZ2lzdGVyQ3RybCcsXG4gICAgdGVtcGxhdGVVcmw6ICdyZWdpc3Rlci5odG1sJ1xuICB9KVxuICAud2hlbignL2xvZ2luJywge1xuICAgIGNvbnRyb2xsZXI6ICdMb2dpbkN0cmwnLFxuICAgIHRlbXBsYXRlVXJsOiAnbG9naW4uaHRtbCdcbiAgfSlcbn0pXG4iLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcbi5zZXJ2aWNlKCdVc2VyU3ZjJywgZnVuY3Rpb24gKCRodHRwKSB7XG4gIHZhciBzdmMgPSB0aGlzXG4gIHN2Yy5nZXRVc2VyID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiAkaHR0cC5nZXQoJy9hcGkvdXNlcnMnLCB7XG4gICAgICBoZWFkZXJzOiB7ICdYLUF1dGgnOiB0aGlzLnRva2VuIH1cbiAgICB9KVxuICB9XG4gIHN2Yy5sb2dpbiA9IGZ1bmN0aW9uICh1c2VybmFtZSwgcGFzc3dvcmQpIHtcbiAgICByZXR1cm4gJGh0dHAucG9zdCgnL2FwaS9zZXNzaW9ucycsIHtcbiAgICAgIHVzZXJuYW1lOiB1c2VybmFtZSwgcGFzc3dvcmQ6IHBhc3N3b3JkXG4gICAgfSkudGhlbihmdW5jdGlvbiAodmFsKSB7XG4gICAgICBzdmMudG9rZW4gPSB2YWwuZGF0YVxuICAgICAgcmV0dXJuIHN2Yy5nZXRVc2VyKClcbiAgICB9KVxuICB9XG59KVxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9